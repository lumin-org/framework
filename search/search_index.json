{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>A lightning fast &amp; efficient framework for Roblox</p> <p>Guides Reference</p>"},{"location":"#easily-create-controllers","title":"Easily Create Controllers","text":"<pre><code>local Framework = require(Packages.framework)\n\nlocal function Explode()\n    print(\"KABOOM!!!\")\nend\n\nreturn Framework.New {\n    Explode = Explode,\n}\n</code></pre> <p>Boasts an efficent controller API, which is not verbose and uncomplicated.</p>"},{"location":"#organized-dependencies","title":"Organized Dependencies","text":"<pre><code>local Framework = require(Packages.framework)\nlocal Dependency = require(Modules.Dependency)\n\n-- Init is called after other dependencies the module uses are loaded\nlocal function Init()\n    Dependency.NuclearExplosion() -- This dependency loads first and in result is usable!\nend\n\nreturn Framework.New {\n    Uses = { Dependency },\n    Init = Init,\n}\n</code></pre> <p>Organizes your dependencies in an understandable way, so you can easily keep track of what your module uses.</p>"},{"location":"#straightforward-lifecycle-design","title":"Straightforward Lifecycle Design","text":"<pre><code>local Framework = require(Packages.framework)\nlocal FrameLifecycle = Framework.Lifecycle(\"PostSimulation\")\n\nlocal function PostSimulation()\n    print(\"I print every frame!\")\nend\n\nreturn Framework.New {\n    PostSimulation = PostSimulation,\n}\n</code></pre> <p>Has a simple lifecycle design that is readable and accessible at a glance.</p>"},{"location":"#finally","title":"Finally...","text":"<p>Try it out and see if you love it! It comes in a very small size and is easily embeddable into already existing game architecture; no extra dependencies are required. With built-in plugin support, a thriving community, and type safety, what's truly not to like about it?</p>"},{"location":"changelog/","title":"Changelog","text":"<p>hide:</p> <ul> <li>navigation</li> </ul>"},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Fixes an issue with start being in the incorrect order (#29)</li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>Removes default lifecycle types</li> </ul>"},{"location":"changelog/#901-2024-11-19","title":"9.0.1 - 2024-11-19","text":""},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Fixes an issue with initiation (#28)</li> </ul>"},{"location":"changelog/#900-2024-10-10","title":"9.0.0 - 2024-10-10","text":""},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Fixes some issues that are related to yielding code unexpectedly (#27)</li> <li>Fixes some docs issues</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Improved the way lifecycles are loaded (#26)</li> </ul>"},{"location":"changelog/#900-rc13-2024-09-25","title":"9.0.0-rc13 - 2024-09-25","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Added back ability to create default lifecycle types</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Changed <code>Cycle</code> API to <code>Lifecycle</code> to be more concise</li> </ul>"},{"location":"changelog/#900-rc12-2024-09-23","title":"9.0.0-rc12 - 2024-09-23","text":""},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>Changes how controllers load to be more efficient</li> </ul>"},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Adds improved cycle APIs</li> <li>Adds load order option to controllers</li> <li>Add philosphy page in documentation</li> </ul>"},{"location":"changelog/#removed_1","title":"Removed","text":"<ul> <li>Removes <code>.Load</code> in favor of merging with <code>.Start</code></li> <li>Removed default cycle types in favor of self-implementation</li> </ul>"},{"location":"changelog/#900-rc11-2024-09-22","title":"9.0.0-rc11 - 2024-09-22","text":""},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Fixes an error with controllers not loading</li> </ul>"},{"location":"changelog/#900-rc10-2024-09-21","title":"9.0.0-rc10 - 2024-09-21","text":""},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Fixes an issue with controller loading</li> </ul>"},{"location":"changelog/#900-rc9-2024-09-21","title":"9.0.0-rc9 - 2024-09-21","text":""},{"location":"changelog/#fixed_5","title":"Fixed","text":"<ul> <li>Fixes <code>.Start</code> not being called in <code>Used</code> modules</li> </ul>"},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>Changes <code>Worker</code> to <code>Cycle</code></li> <li>Changed docs style</li> </ul>"},{"location":"changelog/#removed_2","title":"Removed","text":"<ul> <li>Removes <code>OnStart</code> in favor of a callback within <code>Start</code></li> </ul>"},{"location":"changelog/#900-rc8-2024-09-13","title":"9.0.0-rc8 - 2024-09-13","text":""},{"location":"changelog/#fixed_6","title":"Fixed","text":"<ul> <li>Adds a fix for an incorrect type reference</li> <li>Simplifies controller type</li> </ul>"},{"location":"changelog/#900-rc7-2024-09-02","title":"9.0.0-rc7 - 2024-09-02","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Adds <code>Controller.Uses</code> as an optional table that contains every other controller that it uses</li> </ul>"},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li>How workers are defined internally, much less code</li> <li><code>.Controller</code> to <code>.New</code>, much less verbose and more general</li> <li>Controllers no longer need names upon creation</li> <li>Simplify internal code to be under 200 LOC</li> </ul>"},{"location":"changelog/#removed_3","title":"Removed","text":"<ul> <li>Removes <code>.Expect</code> for a better dependency system</li> <li>Removes <code>.Signal</code> for less bloat in favor of custom systems</li> </ul>"},{"location":"changelog/#900-rc6-2024-08-20","title":"9.0.0-rc6 - 2024-08-20","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>Dependency injection</li> <li>New docs page</li> </ul>"},{"location":"changelog/#900-rc5-2024-08-14","title":"9.0.0-rc5 - 2024-08-14","text":""},{"location":"changelog/#fixed_7","title":"Fixed","text":"<ul> <li>Fixes issue with Player based workers</li> <li>Fixed xpcall issues</li> </ul>"},{"location":"changelog/#changes","title":"Changes","text":"<ul> <li>Updates docs</li> </ul>"},{"location":"changelog/#900-rc4-2024-08-12","title":"9.0.0-rc4 - 2024-08-12","text":""},{"location":"changelog/#fixed_8","title":"Fixed","text":"<ul> <li>Fixed issue with workers again</li> </ul>"},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>Updated example place to include workers and better response times</li> </ul>"},{"location":"changelog/#900-rc3-2024-08-12","title":"9.0.0-rc3 - 2024-08-12","text":""},{"location":"changelog/#fixed_9","title":"Fixed","text":"<ul> <li>Fixed some issues with github actions not working entirely</li> <li>Fixed some issues with invalid types in niche cases</li> <li>Fixed some issues with workers not being registered correctly</li> </ul>"},{"location":"changelog/#changed_5","title":"Changed","text":"<ul> <li>Changed where releases are drafted into a different job</li> </ul>"},{"location":"changelog/#900-rc2-2024-08-11","title":"9.0.0-rc2 - 2024-08-11","text":""},{"location":"changelog/#changed_6","title":"Changed","text":"<ul> <li>Changed github actions to be more precise and automate more tasks</li> </ul>"},{"location":"changelog/#removed_4","title":"Removed","text":"<ul> <li>Removed an internal type that was not working properly</li> </ul>"},{"location":"changelog/#900-rc1-2024-08-08","title":"9.0.0-rc1 - 2024-08-08","text":""},{"location":"changelog/#changed_7","title":"Changed","text":"<ul> <li>Adds .Controller to define controller objects</li> <li>Adds .Worker to define worker objects</li> <li>Adds .Start for streamlined working</li> <li>Networking is now a separate package, under LuminNet</li> <li>Adds improved debugging internally</li> <li>Improves docs a ton, adding tutorials for every aspect</li> </ul>"},{"location":"changelog/#removed_5","title":"Removed","text":"<ul> <li>Removes client and server interfaces</li> </ul>"},{"location":"changelog/#815-2024-07-23","title":"8.1.5 - 2024-07-23","text":""},{"location":"changelog/#fixed_10","title":"Fixed","text":"<ul> <li>Fixed some github actions</li> </ul>"},{"location":"changelog/#805-2024-07-14","title":"8.0.5 - 2024-07-14","text":""},{"location":"changelog/#changed_8","title":"Changed","text":"<ul> <li>Fixes problems with .Load not working entirely correctly</li> <li>Fixes package list in docs</li> <li>Type validation will now error if incorrect</li> </ul>"},{"location":"changelog/#804-2024-07-07","title":"8.0.4 - 2024-07-07","text":""},{"location":"changelog/#changed_9","title":"Changed","text":"<ul> <li>Improves format of site and actions</li> <li>Fixes standalone not having properly exported package types (thanks @DrasticBlink)</li> </ul>"},{"location":"changelog/#803-2024-06-18","title":"8.0.3 - 2024-06-18","text":""},{"location":"changelog/#changed_10","title":"Changed","text":"<ul> <li>Fixes issue with existing network events/functions not being able to be defined multiple times</li> </ul>"},{"location":"changelog/#802-2024-05-24","title":"8.0.2 - 2024-05-24","text":""},{"location":"changelog/#changed_11","title":"Changed","text":"<ul> <li>Adds type references to init module as they were not accessible prior</li> </ul>"},{"location":"changelog/#801-2024-05-12","title":"8.0.1 - 2024-05-12","text":""},{"location":"changelog/#added_5","title":"Added","text":"<ul> <li>Re-release due to wally issue</li> </ul>"},{"location":"changelog/#800-2024-05-12","title":"8.0.0 - 2024-05-12","text":""},{"location":"changelog/#added_6","title":"Added","text":"<ul> <li>Adds reviews to docs home page</li> </ul>"},{"location":"changelog/#800-rc2-2024-05-04","title":"8.0.0-rc2 - 2024-05-04","text":""},{"location":"changelog/#changed_12","title":"Changed","text":"<ul> <li>Improve main module structure</li> <li>Fix typing bug with <code>.Load()</code></li> </ul>"},{"location":"changelog/#802-rc1-2024-04-29","title":"8.0.2-rc1 - 2024-04-29","text":""},{"location":"changelog/#changed_13","title":"Changed","text":"<ul> <li>Fixes yielding bug on client when character does not load</li> </ul>"},{"location":"changelog/#801-rc1-2024-04-29","title":"8.0.1-rc1 - 2024-04-29","text":""},{"location":"changelog/#changed_14","title":"Changed","text":"<ul> <li>Fix networking interface issues</li> </ul>"},{"location":"changelog/#800-rc1-2024-04-28","title":"8.0.0-rc1 - 2024-04-28","text":""},{"location":"changelog/#added_7","title":"Added","text":"<ul> <li>Improved networking system</li> <li>Better solutions to load modules during run time</li> </ul>"},{"location":"changelog/#changed_15","title":"Changed","text":"<ul> <li>Changed project name from CanaryEngine to LuminFramework</li> <li>All yielding code now uses promises</li> </ul>"},{"location":"changelog/#removed_6","title":"Removed","text":"<ul> <li>Client.PlayerBackpack</li> </ul>"},{"location":"changelog/#702-2024-03-05","title":"7.0.2 - 2024-03-05","text":""},{"location":"changelog/#changed_16","title":"Changed","text":"<ul> <li>Fix client once again</li> </ul>"},{"location":"changelog/#removed_7","title":"Removed","text":"<ul> <li>Frozen client tables; causing issues</li> </ul>"},{"location":"changelog/#701-2024-03-05","title":"7.0.1 - 2024-03-05","text":""},{"location":"changelog/#changed_17","title":"Changed","text":"<ul> <li>If something is not a module when using <code>ImportPackages</code>, it will be ignored</li> <li>Fixes <code>Framework.Client</code> issues with frozen tables</li> </ul>"},{"location":"changelog/#700-2024-03-03","title":"7.0.0 - 2024-03-03","text":""},{"location":"changelog/#added_8","title":"Added","text":"<ul> <li>Newly upgraded networking library, with <code>ContextInterface.Network</code> API</li> <li>Renames older API to fit with new standards</li> </ul>"},{"location":"changelog/#changed_18","title":"Changed","text":"<ul> <li>Improves how the network library works with unreliables</li> <li>Improves general code</li> <li>Fixes bugs within <code>Canary.Client</code> (@DrasticBlink)</li> <li>Changes <code>Canary.GetFramework</code> to the just the currently running context</li> </ul>"},{"location":"changelog/#removed_8","title":"Removed","text":"<ul> <li><code>LuminFramework.CreateAnonymousSignal</code></li> <li><code>ContextInterface.NetworkController</code></li> <li><code>LuminFramework.GetFrameworkShared</code></li> <li><code>LuminFramework.Future</code></li> </ul>"},{"location":"changelog/#621-2023-12-28","title":"6.2.1 - 2023-12-28","text":""},{"location":"changelog/#added_9","title":"Added","text":"<ul> <li>Networking type validation</li> </ul>"},{"location":"changelog/#changed_19","title":"Changed","text":"<ul> <li>Fixes player gui/backpack properties not updating when player respawns</li> <li>Deprecate <code>Debugger.Debug</code> and <code>Debugger.DebugPrefix</code> functions in favor <code>Debugger.LogEvent</code></li> <li>Change prefixes of settings to <code>FFlag</code></li> </ul>"},{"location":"changelog/#611-2023-12-08","title":"6.1.1 - 2023-12-08","text":""},{"location":"changelog/#changed_20","title":"Changed","text":"<ul> <li>Improves load time to use milliseconds</li> <li>Mainly improves docs</li> <li>Cleans up code in a few areas</li> <li>Changes how network controller logs are formatted</li> </ul>"},{"location":"changelog/#610-2023-12-06","title":"6.1.0 - 2023-12-06","text":""},{"location":"changelog/#added_10","title":"Added","text":"<ul> <li>Support for reliable/unreliable network controllers</li> </ul>"},{"location":"changelog/#changed_21","title":"Changed","text":"<ul> <li>Creating an anonymous signal will no longer log the name as 'nil'</li> <li>Network controller names now use identifiers</li> <li>Network controller creation now displays reliability type in log</li> <li>Adds ability to set a listener on a network controller after being initially set</li> </ul>"},{"location":"changelog/#600-2023-11-29","title":"6.0.0 - 2023-11-29","text":""},{"location":"changelog/#added_11","title":"Added","text":"<ul> <li>Better calculation of startup</li> </ul>"},{"location":"changelog/#changed_22","title":"Changed","text":"<ul> <li>Improved internally logged events to be more clear</li> </ul>"},{"location":"changelog/#removed_9","title":"Removed","text":"<ul> <li><code>source</code> param from LogEvent to make code more neat</li> </ul>"},{"location":"changelog/#600-rc1-2023-11-28","title":"6.0.0-rc1 - 2023-11-28","text":""},{"location":"changelog/#added_12","title":"Added","text":"<ul> <li>Revamped documentation layouts</li> <li>Use <code>.luaurc</code> file instead of <code>--!strict</code></li> <li>Correctly logs when an object is created</li> </ul>"},{"location":"changelog/#changed_23","title":"Changed","text":"<ul> <li>General code Changed and bug fixes</li> <li>Improved API naming to be more clear</li> <li>Improves <code>LogEvent</code> performance</li> <li>Update internal naming scheme to reflect frontend</li> <li><code>:BindToInvocation</code> will now give a type warning if at least 1 value is returned</li> <li>Improve <code>:BindToInvocation</code> to disallow returning nil/nothing</li> <li>Add Framework and Server/Client tags to internal logs</li> </ul>"},{"location":"changelog/#removed_10","title":"Removed","text":"<ul> <li>Remove deprecated alias <code>LuminFramework.GetFrameworkReplicated</code></li> </ul>"},{"location":"changelog/#510-2023-11-21","title":"5.1.0 - 2023-11-21","text":""},{"location":"changelog/#added_13","title":"Added","text":"<ul> <li>Revamped plugin, now only creates scripts</li> </ul>"},{"location":"changelog/#changed_24","title":"Changed","text":"<ul> <li>Refined installation process, makes models available only per release.</li> </ul>"},{"location":"changelog/#500-2023-11-08","title":"5.0.0 - 2023-11-08","text":""},{"location":"changelog/#added_14","title":"Added","text":"<ul> <li>Wally support / Rojo</li> <li>Improved documentation</li> <li>Adds <code>ShowLoggedEvents</code> setting</li> </ul>"},{"location":"changelog/#changed_25","title":"Changed","text":"<ul> <li>Mainly lots of internal Changed and/or optimizations</li> <li>Optimized <code>Debugger.LogEvent</code> in most cases</li> <li>Improves debugger user API</li> <li>Framework debugs server and client start time in MS</li> <li>Removes need for plugin, can drag/drop anywhere</li> </ul>"},{"location":"changelog/#removed_11","title":"Removed","text":"<ul> <li>A lot of useless/deprecated functions or properties</li> </ul>"},{"location":"changelog/#400-2023-10-14","title":"4.0.0 - 2023-10-14","text":"<p>(Includes rc1-3)</p>"},{"location":"changelog/#added_15","title":"Added","text":"<ul> <li>Improved API</li> </ul>"},{"location":"changelog/#changed_26","title":"Changed","text":"<ul> <li>Improves structure and others</li> <li>Improves internal code to be a lot faster</li> <li>LuminFramework is now a standalone modulescript which can be used from anywhere</li> </ul>"},{"location":"changelog/#400-rc3-unknown","title":"4.0.0-rc3 - Unknown","text":""},{"location":"changelog/#added_16","title":"Added","text":"<ul> <li>Rewrote plugin features</li> <li>Add package manager to plugin</li> <li>Add ability to add custom packages to manager</li> <li>Add <code>Snacky</code> to Canary Suite</li> </ul>"},{"location":"changelog/#changed_27","title":"Changed","text":"<ul> <li>Improves internal API, should be significantly faster</li> <li>Improves networking / signal APIs, tuples are now allowed</li> <li>Improves default structure, changed names of all folders to fit developers' needs</li> <li>Improve UIShelf, adds text icons + improved menus</li> </ul>"},{"location":"changelog/#removed_12","title":"Removed","text":"<ul> <li>Deprecated functions</li> </ul>"},{"location":"changelog/#400-rc2-unknown","title":"4.0.0-rc2 - Unknown","text":""},{"location":"changelog/#added_17","title":"Added","text":"<ul> <li>Adds <code>Red</code>, revamped the networking system once again and for the last time</li> <li>Adds <code>NetworkController:FireFilter</code></li> <li>Adds <code>LuminFramework.ImportPackagesInOrder</code>2</li> <li>Finish API documentation</li> </ul>"},{"location":"changelog/#changed_28","title":"Changed","text":"<ul> <li>Adds event logs when creating classes</li> <li>Creating new scripts / packages will now have the date when created, and your username at top (thanks @BigBubba!)</li> <li>Changes structure to be more efficient</li> <li>Signals / NetworkControllers allow tuples</li> <li>Small bug fixes</li> <li>QOL fixes</li> </ul>"},{"location":"changelog/#removed_13","title":"Removed","text":"<ul> <li><code>BridgeNet</code></li> </ul>"},{"location":"changelog/#400-rc1-unknown","title":"4.0.0-rc1 - Unknown","text":""},{"location":"changelog/#added_18","title":"Added","text":"<ul> <li>Revamped plugin for last time, easier to navigate / add features</li> <li>Adds ability to pull packages from any GitHub repo</li> <li>Entirely new documentation provider</li> </ul>"},{"location":"changelog/#changed_29","title":"Changed","text":"<ul> <li>Improves EasyProfile (#3, koxx12)</li> <li>Renames <code>CanaryEngineFramework</code> instance to <code>Framework</code></li> <li>Renames <code>LuminFramework</code> module to <code>Init</code></li> <li>Small bug fixes</li> <li>QOL fixes</li> <li>Most yielding functions now make usage of Futures</li> </ul>"},{"location":"changelog/#removed_14","title":"Removed","text":"<ul> <li><code>EngineContext.Packages</code></li> <li><code>EngineContext.Media</code></li> </ul>"},{"location":"changelog/#335-2023-08-25","title":"3.3.5 - 2023-08-25","text":""},{"location":"changelog/#added_19","title":"Added","text":"<ul> <li>2 new debugger functions</li> <li>UIShelf library</li> <li>Documentation blog page</li> </ul>"},{"location":"changelog/#changed_30","title":"Changed","text":"<ul> <li>Improve <code>networkControllerTimeout</code></li> <li>Improve API docs</li> <li>Improve tutorials, 4 new</li> <li>Improve types</li> <li>Improve performance</li> </ul>"},{"location":"changelog/#325-2023-08-12","title":"3.2.5 - 2023-08-12","text":"<p>No information available, mainly small bug fixes.</p>"},{"location":"changelog/#324-2023-08-07","title":"3.2.4 - 2023-08-07","text":""},{"location":"changelog/#added_20","title":"Added","text":"<ul> <li><code>AnonymousSignals</code> (#2, koxx12)</li> <li><code>EngineReplicatedFirst</code></li> <li>Add new default loading screen</li> </ul>"},{"location":"changelog/#changed_31","title":"Changed","text":"<ul> <li>Fix all plugin bugs, now runs faster</li> <li>Fix signals erroring constantly</li> <li>Fix small bugs</li> <li>Improve typings</li> <li>Updated Benchmark + Debugger modules</li> </ul>"},{"location":"changelog/#314-2023-07-22","title":"3.1.4 - 2023-07-22","text":""},{"location":"changelog/#added_21","title":"Added","text":"<ul> <li>Native <code>roblox-ts</code> support</li> <li>Docs for all APIs</li> <li>Plugin now updates all files dynamically</li> </ul>"},{"location":"changelog/#changed_32","title":"Changed","text":"<ul> <li>Improves default structure</li> <li>Improved plugin</li> </ul>"},{"location":"changelog/#removed_15","title":"Removed","text":"<ul> <li>Remove <code>Runtime.IsStarted</code></li> <li>Deprecated <code>.GetLatestPackageVersionAsync</code></li> </ul>"},{"location":"changelog/#301-unknown","title":"3.0.1 - Unknown","text":""},{"location":"changelog/#changed_33","title":"Changed","text":"<ul> <li>Typings have been improved to contain an additional argument for network controllers</li> <li>Signals now use a wrapper</li> </ul>"},{"location":"changelog/#300-unknown","title":"3.0.0 - Unknown","text":""},{"location":"changelog/#added_22","title":"Added","text":"<ul> <li>Add <code>LuminFramework.RuntimeCreatedSignals</code></li> <li>Add <code>LuminFramework.RuntimeCreatedNetworkControllers</code></li> <li>Support for invoking server</li> <li>Reworked data saving</li> <li>Add <code>CanaryEngineClient.PlayerBackpack</code></li> <li>Add <code>Replicated</code> folder to <code>LuminFramework/Media</code></li> <li>Proper documentation to almost all methods, expect finished docs to come along when v3.1.0 releases with a few hotfixes and general Changed</li> <li>Add <code>CanaryEngineServer.Media.Server</code></li> <li>Add <code>CanaryEngineClient.Media.Client</code></li> <li>Add <code>Spring</code> to default packages</li> <li>Add <code>Promise</code> to default packages</li> <li>Add <code>MatchmakingService</code></li> </ul>"},{"location":"changelog/#changed_34","title":"Changed","text":"<ul> <li>Turn <code>NetworkSignal</code> into <code>NetworkController</code></li> <li>Add <code>signalName</code> parameter to <code>LuminFramework.CreateSignal</code> for easier signal access across scripts (breaking change)</li> <li>Add error when trying to import packages during runtime</li> <li>Fix <code>Runtime.IsStarted</code> not working</li> <li>Move <code>Utility</code>, <code>Benchmark</code>, and <code>Statistics</code> to their own each modules for better loading times</li> <li>Improve engine context fetch code</li> <li>CustomScriptSignal is now ScriptSignal, old ScriptSignal is now BasicScriptSignal</li> <li>Improve BridgeNet wrapper to be more clean + efficient</li> <li>Internal tooling is extremely easier to access</li> </ul>"},{"location":"changelog/#removed_16","title":"Removed","text":"<ul> <li>Remove <code>CanaryEngineServer.GetDataService</code></li> <li>Remove <code>CanaryEngineServer.Media</code></li> <li>Remove <code>CanaryEngineClient.Media</code></li> </ul>"},{"location":"changelog/#221-unknown","title":"2.2.1 - Unknown","text":""},{"location":"changelog/#added_23","title":"Added","text":"<ul> <li>Add Once + Disconnect to <code>NetworkSignals</code></li> </ul>"},{"location":"changelog/#changed_35","title":"Changed","text":"<ul> <li>Fix bugs</li> <li>Clean Code</li> <li>Framework starts earlier for better server security</li> </ul>"},{"location":"changelog/#220-unknown","title":"2.2.0 - Unknown","text":""},{"location":"changelog/#added_24","title":"Added","text":"<ul> <li>Add 'Statistics Library'</li> <li>Add support for EasyDocs</li> <li>Add <code>PlayerGui</code> to <code>EngineClient</code>.</li> </ul>"},{"location":"changelog/#changed_36","title":"Changed","text":"<ul> <li>Fix bugs</li> <li>Clean Code</li> </ul>"},{"location":"changelog/#210-unknown","title":"2.1.0 - Unknown","text":""},{"location":"changelog/#added_25","title":"Added","text":"<ul> <li>Add Vendor folder under new packages</li> </ul>"},{"location":"changelog/#changed_37","title":"Changed","text":"<ul> <li>Make it so that return data from regular <code>Signal</code>s return in a table instead of a tuple for consistency</li> <li>Create wrapper for BridgeNet instead of editing the source code</li> <li>Improve code</li> <li>Remove BridgeNet output logs</li> <li>Fix support for Wait</li> <li>Update <code>base64</code> by @Gooncreeper</li> </ul>"},{"location":"changelog/#200-unknown","title":"2.0.0 - Unknown","text":""},{"location":"changelog/#added_26","title":"Added","text":"<ul> <li>Added option to install default packages in the plugin</li> <li>Added new <code>Utility</code> functions to the module</li> <li>Add <code>base64</code> by @Gooncreeper</li> <li>Add <code>EngineServer.GetDataService()</code></li> <li>Add support for debugging in live games</li> </ul>"},{"location":"changelog/#changed_38","title":"Changed","text":"<ul> <li>Clean up code</li> <li>Bug fixes</li> <li>Fix up <code>random_gen</code></li> </ul>"},{"location":"changelog/#removed_17","title":"Removed","text":"<ul> <li>Remove <code>EngineClient.LocalObjects</code></li> <li>Remove <code>EngineClient.PreinstalledPackages</code></li> <li>Remove <code>EngineServer.PreinstalledPackages</code></li> </ul>"},{"location":"changelog/#120-unknown","title":"1.2.0 - Unknown","text":""},{"location":"changelog/#added_27","title":"Added","text":"<ul> <li>Added install and uninstall to plugin</li> <li>Added <code>Utility</code>, <code>Benchmark</code>, and <code>Serialize</code> (BlueSerializer by @commitblue) libs to the main module</li> <li>Add support for checking framework version automatically with <code>GetLatestPackageVersionAsync</code>, it is now an attribute under the main module.</li> <li>Better <code>NetworkSignal</code> typing</li> </ul>"},{"location":"changelog/#changed_39","title":"Changed","text":"<ul> <li>A few QOL fixes</li> <li>Bug fixes</li> </ul>"},{"location":"changelog/#removed_18","title":"Removed","text":"<ul> <li>Removed intellisense from plugin, it's sadly impossible</li> </ul>"},{"location":"changelog/#110-unknown","title":"1.1.0 - Unknown","text":"<ul> <li>Public release! \ud83e\udd73</li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#roblox","title":"Roblox","text":"<ol> <li>Go to the latest releases page</li> <li>Download <code>Standalone.rbxm</code></li> <li>Select <code>Insert from file</code>, and find <code>Standalone.rbxm</code> in your designated downloads folder</li> </ol>"},{"location":"installation/#wally","title":"Wally","text":"<ol> <li>Open a project in your favorite text editor</li> <li>Add <code>lumin/framework@9.0.0-rc7</code> to your <code>wally.toml</code> file</li> <li>Run <code>wally install</code> the project should be inside of your <code>/Packages</code> directory.</li> </ol>"},{"location":"api/","title":"Framework","text":"<p>The main class of LuminFramework.</p>"},{"location":"api/#properties","title":"Properties","text":""},{"location":"api/#version","title":"<code>version</code>","text":"<p>The current version of the framework.</p> <ul> <li><code>string</code></li> </ul>"},{"location":"api/#functions","title":"Functions","text":""},{"location":"api/#start","title":"<code>Start</code>","text":"<p>Starts the framework and prepares all of the cycles/controllers.</p> <p>Parameters</p> <ul> <li> <p>directories: <code>{ Instance }</code> A list of directories that have controllers inside of them. Only children are loaded.</p> </li> <li> <p>filter: <code>((module: ModuleScript) -&gt; boolean)?</code> A filter that runs on every file in the specified directories. Return true to allow module.</p> </li> <li> <p>callback: <code>(() -&gt; ())?</code> Runs when the start process has finished</p> </li> </ul> <p>Returns</p> <ul> <li><code>void</code></li> </ul>"},{"location":"api/#new","title":"<code>New</code>","text":"<p>Creates a new controller for management of various tasks. Returned table is frozen.</p> <p>Parameters</p> <ul> <li> <p>members: <code>{ any }</code> This is where functions, properties, and methods are stored. Use this like a generic module</p> </li> <li> <p>order: <code>number?</code> A specified load order. Defaults to 1 / no specific order</p> </li> </ul> <p>Returns</p> <ul> <li><code>Controller</code></li> </ul>"},{"location":"api/#lifecycle","title":"<code>Lifecycle</code>","text":"<p>Creates a new cycle that hooks onto already existing controller methods.</p> <p>Parameters</p> <ul> <li>type: <code>LifecycleType</code> A designated lfiecycle type</li> </ul> <p>Returns</p> <ul> <li><code>Lifecycle</code></li> </ul>"},{"location":"api/controller/","title":"Controller","text":"<p>Responsible for controlling most of the game's functions</p>"},{"location":"api/controller/#properties","title":"Properties","text":""},{"location":"api/controller/#uses","title":"<code>Uses</code>","text":"<p>Any other controllers that the current one uses</p> <ul> <li><code>{ Controller }</code></li> </ul>"},{"location":"api/controller/#functions","title":"Functions","text":""},{"location":"api/controller/#init","title":"<code>Init</code>","text":"<p>Prepares the controller so that it can be used across the data model.</p> <p>Returns</p> <ul> <li><code>void</code></li> </ul>"},{"location":"api/controller/#start","title":"<code>Start</code>","text":"<p>Called internally when the controller is safe to use other dependencies that were prepared previously by <code>Init</code>.</p> <p>Returns</p> <ul> <li><code>void</code></li> </ul>"},{"location":"api/lifecycle/","title":"Lifecycle","text":"<p>Implements a lifecycle API, that will use methods from controllers that already exist.</p>"},{"location":"api/lifecycle/#properties","title":"Properties","text":""},{"location":"api/lifecycle/#name","title":"<code>Name</code>","text":"<p>The name of the cycle, this will correspond with the method used.</p> <ul> <li><code>string</code></li> </ul>"},{"location":"api/lifecycle/#listeners","title":"<code>Listeners</code>","text":"<p>A list of the methods with the name of <code>Name</code> from each controller.</p> <ul> <li><code>{ (...any) -&gt; () }</code></li> </ul>"},{"location":"api/lifecycle/#methods","title":"Methods","text":""},{"location":"api/lifecycle/#fire","title":"<code>Fire</code>","text":"<p>The callback function which is set to run every time the <code>Connection</code> runs.</p> <p>Parameters</p> <ul> <li>params: <code>...any</code> A list of parameters to be passed to the controller method</li> </ul> <p>Returns</p> <ul> <li><code>void</code></li> </ul>"},{"location":"guides/","title":"Setup","text":"<p>To successfully kick off your new Lumin project, we recommend using SSA (single script architecture). The framework was designed for this type of architecture and hence is most compatible with it.</p>"},{"location":"guides/#organization","title":"Organization","text":"<p>Organization is a vital part of a successful game! First and foremost, you should be placing the LuminFramework package within <code>ReplicatedStorage</code> so the client and server can both access it. After you sort that out, place a server and client script inside <code>ReplicatedStorage</code> and <code>ServerStorage</code> respectively (this example uses <code>RunContext</code> but there is fundamentally no difference). After, create a <code>Modules</code> folder in <code>ReplicatedStorage</code> and <code>ServerStorage</code> along with a <code>Shared</code> folder in <code>ReplicatedStorage</code> as well for modules where the run context does not matter.</p>"},{"location":"guides/#start","title":"Start","text":"<p>Setting up the framework is identical on both client and server scripts, with the only change being the module directories. An example is seen below:</p> <pre><code>local Lumin = require(path.to.luminframework)\nlocal Modules = require(game:GetService(\"ReplicatedStorage\").Modules) -- Points to Shared, Client or Server modules\nLumin.Start({\n    Modules, -- You can add more directories to this table which the children will be loaded\n})\n</code></pre>"},{"location":"guides/#recommended-packages","title":"Recommended Packages","text":"<p>A list of other open sourced libraries that pair quite well with the framework.</p> <p><code>dphfox/fusion</code> <code>lumin/net</code> <code>sleitnick/trove</code></p> <p>These are for most basic games but you can remove or include others as you please!</p>"},{"location":"guides/controllers/","title":"Controllers","text":"<p>The controller object is an object that allows you to create data structures catered towards controlling the game, per the name. Think of it similar to a service in another framework like Knit. New Controllers cannot be created after <code>.Start</code> is finished.</p>"},{"location":"guides/controllers/#usage","title":"Usage","text":"<p>Setting up a controller is a simple as calling the <code>Controller</code> function. The preferred way to do this is shown below.</p> <pre><code>local function Init()\n    print(\"Initialized!\")\nend\n\nlocal function Start()\n    print(\"Started!\")\nend\n\nreturn Lumin.New {\n    Init = Init,\n    Start = Start,\n}\n</code></pre> <p>That is an example of the most minimal controller, that includes all of the required items. With this, you include as many other functions, methods, or properties as you please.</p>"},{"location":"guides/controllers/#recommended-items","title":"Recommended Items","text":"<p>For controllers, the amount of recommended items is very minimal. These exist to streamline certain processes that may cause a dependency to be unavailable, and also fix race conditions. The list can be seen below.</p> <ul> <li><code>Init</code></li> <li><code>Start</code></li> </ul> <p>The functionality of these are explained in the loading section.</p>"},{"location":"guides/controllers/#loading","title":"Loading","text":"<pre><code>flowchart LR\n    A(Init) --&gt; B{Pcall} --&gt;\n    C(Start) --&gt; D{Pcall} --&gt;\n    F(Finished)</code></pre> <p>Above is a diagram of how every controller loads. Dependencies of controllers will become available after <code>Start</code> is called as seen in order below:</p> <pre><code>flowchart TB\n    A(Init) -- Dependencies are loading --&gt; B(Start) -- Dependencies are ready --&gt; C(Finish)</code></pre> <p>This is how dependencies eventually become available in a controller's lifecycle. Once we get to the <code>Finish</code> step, they can be used anywhere within the controller as new ones cannot be created after the framework has started. There are alternatives to this, however, and they can be done using the <code>Uses</code> property of controllers.</p>"},{"location":"guides/controllers/#dependency-use","title":"Dependency Use","text":"<p>To use other dependencies, all you have to do is use <code>require</code> on the module as you normally would. You will get the correct type inferences and functions along with this as well.</p>"},{"location":"guides/dependencies/","title":"Dependencies","text":"<p>Dependencies can sometimes be confusing. If not done correctly, they can lead to race conditions and what seems like never-ending errors. Lumin Framework has a way to fix this and it is a simple and quick solution to apply to your code.</p>"},{"location":"guides/dependencies/#usage","title":"Usage","text":"<p>Access to this feature can be achieved by using the <code>.Uses</code> property of controllers. This a defined table of all of the dependencies that your module uses.</p>"},{"location":"guides/dependencies/#module-1","title":"Module 1","text":"<pre><code>local MyController = require(script.Parent.MyController)\n\nlocal function Init()\n    print(\"Loaded second!\")\nend\n\nreturn Lumin.New {\n    Uses = { MyController }\n    Init = Init\n}\n</code></pre>"},{"location":"guides/dependencies/#module-2","title":"Module 2","text":"<pre><code>local function Init()\n    print(\"Loaded first!\")\nend\n\nreturn Lumin.New {\n    Init = Init,\n}\n</code></pre>"},{"location":"guides/dependencies/#loading","title":"Loading","text":"<p>The load order differs from the default but not too much. Here's a diagram of it.</p> <pre><code>flowchart TB\n    A(Uses MyController) -- Put module first in loading queue --&gt; B(Init in used) -- Load dependency --&gt; C(Init in loader) -- Dependencies are ready --&gt; D(Start in both) -- Loading completed --&gt; E(Finish)</code></pre>"},{"location":"guides/lifecycle-events/","title":"Lifecycles","text":"<p>Lifecycles allow developers to easily bind all controller methods with a set name to a specific event. This is quite useful in places where code tends to repeat multiple times. Lifecycles offer a quick fix to these issues, and it is also efficient.</p>"},{"location":"guides/lifecycle-events/#usage","title":"Usage","text":"<p>Usage of lifecycles is very minimal and simple. Here's how to use one:</p>"},{"location":"guides/lifecycle-events/#module-1","title":"Module 1","text":"<pre><code>local MyLifecycle = Lumin.Lifecycle(\"MyLifecycle\")\nMyLifecycle:Fire(\"Hello!!!\")\n</code></pre>"},{"location":"guides/lifecycle-events/#module-2","title":"Module 2","text":"<pre><code>local function MyLifecycle(printer: string)\n    print(printer) -- Output: Hello!!!\nend\n</code></pre>"},{"location":"guides/lifecycle-events/#custom-callbacks","title":"Custom Callbacks","text":"<p>By default, a callback is automatically assigned. This callback has access to the lifecycle's listeners (what functions it is hooked onto) and allows you to run them in a few different ways. The regular nature of this is a <code>task.spawn</code> to prevent any yielding inside of the main framework thread. Sometimes you may want these listeners to yield though, so here's how you can achieve that:</p>"},{"location":"guides/lifecycle-events/#module-1_1","title":"Module 1","text":"<pre><code>local MyLifecycle = Lumin.Lifecycle(\"MyYieldingLifecycle\", function(lifecycle, ...)\n    for _, listener in lifecycle.Listeners do\n        listener(...)\n    end\nend)\n\nMyLifecycle:Fire(\"Did I go first or second?\")\n</code></pre>"},{"location":"guides/lifecycle-events/#module-2_1","title":"Module 2","text":"<pre><code>local function MyYieldingLifecycle(printer: string)\n    task.wait(5)\n    print(printer) -- Output: Did I go first or second?\nend\n</code></pre>"},{"location":"guides/lifecycle-events/#module-3","title":"Module 3","text":"<pre><code>local function MyYieldingLifecycle(printer: string)\n    task.wait(5)\n    print(printer) -- Output: Did I go first or second?\nend\n</code></pre>"},{"location":"guides/lifecycle-events/#default-lifecycles","title":"Default Lifecycles","text":"<p>There are no default lifecycles and they must be created on your own. Some common lifecycle types are things such as <code>PlayerAdded</code>, <code>Heartbeat</code> and more. Default lifecycles were removed in 9.1.0 as they affected game performance.</p>"},{"location":"guides/networking/","title":"Networking","text":"<p>There is no stock networking library that comes with the framework, so you can use any library you want to. For a default option, you can use Net by Lumin.</p> <p>We also recommend:</p> <ul> <li>ByteNet - A networking library focused on hyper-optimization and the usage of buffers</li> <li>Zap - A CLI-based library that creates static .zap files for the most optimization</li> <li>Blink - A competitor to Zap which does similar things, but has support for studio and different API</li> </ul> <p>But for basic networking, we recommend using LuminNet as the API is less bloated than libraries like BridgeNet or Red. Note that the optimizations of LuminNet are still well over default remote event benchmarks.</p>"},{"location":"guides/philosophy/","title":"Philosophy","text":""},{"location":"guides/philosophy/#why-use-lumin","title":"Why use Lumin?","text":"<p>Lumin Framework has been worked on for many years, and takes after many other popular frameworks in the development space such as Knit. It has been battle-tested by many and is one of the best frameworks you can use at the time of writing this. It also has a thriving community of like-minded developers that are willing to help; as well as an extensive ecosystem of other packages.</p>"},{"location":"guides/philosophy/#what-about-typescript","title":"What about Typescript?","text":"<p>Roblox-ts support will not be added to this project. As the Luau type solver increases its featureset and compatbility, roblox-ts will soon become completely redundant. For this reason, it is not worth supporting any typescript features, especially long-term.</p>"},{"location":"guides/philosophy/#alternative-frameworks","title":"Alternative Frameworks","text":"<p>You may think to use some of the other frameworks in this list; but don't switch yet. Lumin is constantly evolving and might become better than some of these in the future.</p> <ul> <li>Knit by Sleitnick</li> <li>Nevermore by Quenty</li> <li>Pronghorn by Iron Stag Games</li> <li>Prvd 'M Wrong by Fireboltofdeath</li> </ul> <p>So why not use these? Many of these have been used and cherished by many, but they are not what they live up to be any longer.</p> <ul> <li>Knit - Has been deprecated and has zero types, along with forcing a subpar service and networking API</li> <li>Nevermore - Introduces hundreds of packages which are complete bloat, as many people do not even use them all. Is not even considered an actual framework either.</li> <li>Pronghorn - Adds more redundant functions and is missing a lot of the featureset most frameworks have.</li> <li>Prvd 'M Wrong - Includes API bloat by default and implements lots of hacky metatable features which are not needed. Lumin achieves the same goal with less code overall.</li> </ul>"}]}